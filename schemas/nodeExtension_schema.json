{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "data attributes",
    "description": "'node' contains the internal description of the nodes by the vis.js library as well as some properties that help remember and propagate the meaning of the node in TAPIS",
	"type": "object",
	"properties": {
		"id": {
			"description": "Internal identifier of the node",
			"type": "string"
		},
		"label": {
			"description": "The label that acompanies the node shape",
			"type": "string"
		},
		"image": {
			"description": "Path to the image shown inside the shape",
			"type": "string",
			"format": "uri"
		},
		"shape": {
			"description": "Shape of the node",
			"enum": ["circularImage"]
		},
		"STAURL": {
			"description": "URL of the service or file represented as a table. Includes de path and query parameters",
			"type": "string",
			"format": "uri"
		},
		"STASelectedExpands": {
			"$ref": "#/definitions/selectedExpands"
		},
		"STAEntityName": {
			"description": "Last name of the entity in the path or expanded. Defines the scope of the node query parameters",
			"type": "string"
		},
		"STASelectExpandNextOrigin": {
			"description": "Points to the the recursive STASelectedExpands expanded entity that is the focus of the node query parameters. If empty, points to the root of STASelectedExpands",
			"type": "array",
			"items": {
				"description": "Index of the expand",
				"type": "integer"
			} 
		},
		"STAdata": {
			"$ref": "data_schema.json#/definitions/data"
		},
		"STAdataAttributes": {
			"$ref": "dataAttributes_schema.json#/definitions/dataAttributes"
		},
		"STACounter": {
			"description": "Set of the identification numbers of the elements in FilterRows dialog. Every element is a row used to indicate the conditions of the filter. Every element contains the entity, the property, the condition and the value",
			"type": "array"
		},
		"STAFilterRowEntities": {
			"description": "The entities selected in every element of the filter in FilterRows dialog",
			"type": "array"
		},
		"STAFilterSchema": {
			"description": "Scheme to be able to set filter priorities",
			"type": "object"
		},
		"STAboxNames": {
			"description": "Set of the identifications of the 'boxes' that make up FilterRows dialog ",
			"type": "array"
		},
		"STAconditionsFilter": {
			"description": "Set of Div elements used in every element of the FilterRows dialog",
			"type": "array"
		},
		"STAelementFilter": {
			"description": "Scheme of the position of every element in Filter Rows dialog. This set of 'boxes' and elements allows to establish the priorities to build the filter query",
			"type": "object"
		},
		"STAentityValuesForSelect": {
			"description": "Array with two elements, first one store the name of the entity queried to the API. Second element is the data recived in this query",
			"type": "array"
		},
		"STAinfoFilter": {
			"description": "The information to form the filter, such as entities, properties, conditions and values",
			"type": "array"
		}

	},
	"definitions": { 
		"selectedExpands": {
			"type": "object",
			"properties": {
				"skip": {
					"description": "Number of entities to skip in the response. Default is 0", 
					"type": "integer"
				},				
				"top": {
					"description": "Number of entities to include in the response. Default is 100", 
					"type": "integer"
				},
				"orderBy": {
					"description": "Criteria to sort the entities in the response", 
					"type": "object",
					"properties": {
						"attribute": {
							"description": "Name of the attribute that is used to sort the data", 
							"type": "string"
						},
						"desc": {
							"description": "Way to sort the data. true mean descending. false mean ascending", 
							"type": "boolean"
						}
					}
				},
				"selected": {
					"description": "Attributes selected to be included in the returned entities. If missing, all attributes are included. The implementation also supports an object with additionalProperties that are booleans for historical reasons.", 
					"type": "array",
					"items": {
						"description": "Attribute name", 
						"type": "string"
					}
				},
				"expanded": {
					"type": "object",
					"additionalProperties": { 
						"description": "Name of the entity to be expanded as a JSON object in the response",
						"$ref": "#/definitions/selectedExpands"
					}
				},
					"filter":{
					"type": "object",
					"description": "Schema and data to built filter query", 
					"properties": { 
						"entity":{
							"description": "Entity where the filter will be applied", 
							"type": "string"
						},
						"filterSchema":{
							"description": "Scheme to be able to set filter priorities", 
							"type": "object"
						},
						"filterData":{
							"description": "The information to form the filter, such as entities, properties, conditions and values", 
							"type": "array"
						}
					}
				}
				}
		}
	}
}