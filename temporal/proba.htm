<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="../tapis.css">
	<link href=".../tools.css" rel="stylesheet" type="text/css">
</head>

<body>




	<script>

		const STAEntities = {
			ObservedProperties: { singular: "ObservedProperty", entities: ["Datastreams", "MultiDatastreams"], properties: { name: { dataType: "string", required: "true" }, definition: { dataType: "URI", required: "true" }, description: { dataType: "string", required: "true" }, properties: { dataType: "JSON", required: "false" } } },
			Observations: { singular: "Observation", entities: ["Datastream", "MultiDatastream", "FeatureOfInterest", "ObservationGroups", "Subjects", "Objects"], properties: { phenomenonTime: { dataType: "object", required: "true" }, resultTime: { dataType: "isodatetime", required: "true" }, result: { dataType: "", required: "true" }, resultQuality: { dataType: "object", required: "false" }, validTime: { dataType: "data_isoperiod", required: "false" }, parameters: { dataType: "JSON", required: "false" }, }, entityRelations: ["Object", "Subject"] },
			FeaturesOfInterest: { singular: "FeatureOfInterest", entities: ["Observations"], properties: { name: { dataType: "string", required: "true" }, description: { dataType: "string", required: "true" }, encodingType: { dataType: "string", required: "true" }, feature: { dataType: "", required: "true" }, properties: { dataType: "JSON", required: "false" } } }, 
			Sensors: { singular: "Sensor", entities: ["Datastreams", "MultiDatastreams"], properties: { name: { dataType: "string", required: "true" }, description: { dataType: "string", required: "true" }, encodingType: { dataType: "string", required: "true" }, metadata: { dataType: "", required: "true" }, properties: { dataType: "JSON", required: "false" } } },
			Things: { singular: "Thing", entities: ["Datastreams", "MultiDatastreams", "Party", "Locations", "HistoricalLocations"], properties: { name: { dataType: "string", required: "true" }, description: { dataType: "string", required: "true" }, properties: { dataType: "JSON", required: "false" } } },
			Locations: { singular: "Location", entities: ["Things", "HistoricalLocations"], properties: { name: { dataType: "string", required: "true" }, description: { dataType: "string", required: "true" }, encodingType: { dataType: "string", required: "true" }, metadata: { dataType: "", required: "true" }, location: { dataType: "", required: "true" }, properties: { dataType: "JSON", required: "false" } } },
			HistoricalLocations: { singular: "HistoricalLocation", entities: ["Things", "Location"], properties: { time: { dataType: "isodatetime", required: "true" } } },
			Datastreams: { singular: "Datastream", entities: ["Party", "Sensor", "ObservedProperty", "Campaigns", "License", "Observations", "Thing"], properties: { name: { dataType: "string", required: "true" }, description: { dataType: "string", required: "true" }, observationType: { dataType: "string", required: "true" }, unitOfMeasurement: { dataType: "JSON", required: "true" }, observedArea: { dataType: "object", required: "false" }, phenomenonTime: { dataType: "data_isoperiod", required: "false" }, resultTime: { dataType: "data_isoperiod", required: "false" }, properties: { dataType: "JSON", required: "false" } } },
			MultiDatastreams: { singular: "MultiDatastream", entities: ["Party", "Sensor", "ObservedProperties", "Campaigns", "License", "Observations", "Thing"], properties: { name: { dataType: "string", required: "true" }, description: { dataType: "string", required: "true" }, observationType: { dataType: "string", required: "true" }, unitOfMeasurement: { dataType: "JSON", required: "true" }, observedArea: { dataType: "object", required: "false" }, phenomenonTime: { dataType: "data_isoperiod", required: "false" }, resultTime: { dataType: "data_isoperiod", required: "false" }, multiObservationDataType: { dataType: "JSON", required: "true" }, properties: { dataType: "JSON", required: "false" } } },
			Parties: { singular: "Party", entities: ["Datastreams", "MultiDatastreams", "Campaigns", "ObservationGroups", "Things"], properties: { description: { dataType: "string", required: "false" }, authId: { dataType: "string", required: "false" }, role: { dataType: "PartyRoleCode", required: "true" }, displayName: { dataType: "string", required: "false" } } },
			Campaigns: { singular: "Campaign", entities: ["Datastreams", "MultiDatastreams", "Party", "License"], properties: { name: { dataType: "string", required: "true" }, description: { dataType: "string", required: "true" }, classification: { dataType: "string", required: "false" }, termsOfUse: { dataType: "string", required: "true" }, privacyPolicy: { dataType: "string", required: "false" }, creationTime: { dataType: "isodatetime", required: "true" }, url: { dataType: "URI", required: "false" }, startTime: { dataType: "isodatetime", required: "false" }, endTime: { dataType: "isodatetime", required: "false" }, properties: { dataType: "JSON", required: "false" } } },
			Licenses: { singular: "License", entities: ["Datastreams", "MultiDatastreams", "Campaigns", "ObservationGroups"], properties: { name: { dataType: "string", required: "true" }, definition: { dataType: "URI", required: "true" }, description: { dataType: "string", required: "true" }, logo: { dataType: "string", required: "false" }, attributionText: { dataType: "JSON", required: "false" } } },
			ObservationGroups: {singular: "ObservationGroup", entities: ["Party", "Campaigns", "License", "Observations", "Relations"], properties: { name: { dataType: "string", required: "true" }, description: { dataType: "string", required: "true" }, purpose: { dataType: "string", required: "false" }, creationTime: { dataType: "isodatetime", required: "false" }, endTimecreationTime: { dataType: "isodatetime", required: "false" }, termsOfUsed: { dataType: "string", required: "false" }, privacyPolicy: { dataType: "string", required: "false" }, dataQuality: { dataType: "JSON", required: "false" }, properties: { dataType: "JSON", required: "false" } }},
			Relations: {singular: "Relation", entities: ["Object", "Subject", "ObservationGroups"],properties: {role: { dataType: "URI", required: "true" }, descriptiondescription: { dataType: "string", required: "false" }, externalObject: { dataType: "URI", required: "false" }, properties: { dataType: "JSON", required: "false" }},entityRelations: ["Objects", "Subjects"]}
		};


	</script>
</body>

</html>