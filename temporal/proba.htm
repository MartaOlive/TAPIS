<html>

<head>
	<meta content="text/html;charset=utf-8" http-equiv="Content-Type">
	<meta content="utf-8" http-equiv="encoding">
	<title>Graph2d | Basic Example</title>



	<link href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.15.1/vis.min.css" rel="stylesheet" type="text/css" />


	<script src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.15.1/vis.min.js"></script>
	<style type="text/css">
		body,
		html {
			font-family: sans-serif;
		}

		.vis-graph-group0 {
			fill: #bdb24f;
			fill-opacity: 0;
			stroke-width: 2px;
			stroke: #b6c52b
		}

		.vis-graph-group1 {
			fill: #f79646;
			fill-opacity: 0;
			stroke-width: 2px;
			stroke: #f79646
		}

		.vis-graph-group2 {
			fill: #8c51cf;
			fill-opacity: 0;
			stroke-width: 2px;
			stroke: #8c51cf
		}

		.vis-graph-group3 {
			fill: #75c841;
			fill-opacity: 0;
			stroke-width: 2px;
			stroke: #75c841
		}

		.pepito {
			fill: #ff0100;
			fill-opacity: 0;
			stroke-width: 2px;
			stroke: #00ff37
		}

		.vis-graph-group5 {
			fill: #37d8e6;
			fill-opacity: 0;
			stroke-width: 2px;
			stroke: #37d8e6
		}
	</style>

	<h2>Graph2d | Basic Example</h2>
	<br />
	<input type="color" id="selectColor" value="#f79646" style="width:20px; height:22px">
	<button onclick="canviaColor()">canvia</button>
	<div id="visualization"></div>


	<script type="text/javascript">

		var STAelementFilter = {
			"elems": [
				{
					"elems": [
						{
							"elems": [
								0,
								1
							],
							"nexus": " not ",
							"boxName": "0_0"
						},
						{
							"elems": [
								2,
								6
							],
							"nexus": " not ",
							"boxName": "0_1"
						},
						{
							"elems": [
								5
							],
							"nexus": null,
							"boxName": "0_3"
						}
					],
					"nexus": " and ",
					"boxName": "1_0"
				},
				{
					"elems": [
						{
							"elems": [
								8,
								9
							],
							"nexus": " and ",
							"boxName": "0_4"
						}
					],
					"nexus": null,
					"boxName": "1_1"
				}
			],
			"nexus": " or ",
			"boxName": "2_0"
		}
		createObjectToKeepForFilter("node", STAelementFilter, {});


		function createObjectToKeepForFilter(node, objectToExplore, objectToBuild) {

			var boxNamesArrays = [];
			for (var i = 0; i < objectToExplore.elems.length; i++) {
				 (objectToExplore.elems[i].boxName)?boxNamesArrays.push(objectToExplore.elems[i].boxName):boxNamesArrays.push(objectToExplore.elems[i]) ;
			}

			objectToBuild[objectToExplore.boxName] = {
				["items"]: boxNamesArrays,
				["nexus"]: objectToExplore.nexus
			}
			if (typeof objectToExplore.elems[0] === "object") {
				for (var i = 0; i < objectToExplore.elems.length; i++) {
					createObjectToKeepForFilter(node, objectToExplore.elems[i], objectToBuild);
				}
			}else{
				console.log(objectToBuild);
			}		
		}

	</script>
	</body>

</html>