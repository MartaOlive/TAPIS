<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="../tapis.css">
	<link href=".../tools.css" rel="stylesheet" type="text/css">
</head>

<body>


	<label>Date:</label> <input type="text" id="createEntityInputDate"
		onChange="addTimeToOtherInputCreateEntities('createEntityInputDate','createEntityInputCalendar' )">
	<br><label>Generate with this: </label><input type="datetime-local" id="createEntityInputCalendar"
		onChange="addTimeToOtherInputCreateEntities('createEntityInputCalendar','createEntityInputDate')">



	<script>

		if (actionToDo == "create") {
			var currentNodeEntityPlural = getSTAEntityPlural(currentNode.label, false);
			var entitiesLinked = STAEntities[currentNodeEntityPlural].entities;
			var entitiesRequiedNotLinked = [], observedPropertiesArray = [], entitiesRequired = [], entitiesNotRequired = [];

			//Creating dialog			
			if (entitiesParentArray.length != 0) {


				for (var e = 0; e < entitiesLinked.length; e++) {
					if (entitiesLinked[e].name == "Party" || entitiesLinked[e].name == "Sensor" || entitiesLinked[e].name == "ObservedProperty" || entitiesLinked[e].name == "Thing") { //required
						for (var u = 0; u < entitiesParentArray.length; u++) {

							if ((getSTAEntityPlural(entitiesLinked[e].name, false) == getSTAEntityPlural(entitiesParentArray[u][0], false)) && entitiesParentArray[u][0] != "ObservedProperty") { //If it is a parentNode 
								entitiesRequired.push(`<span style=" font-weight: bold;">${entitiesParentArray[u][0]}*:<a href="${entitiesParentArray[u][2]}"> ${entitiesParentArray[u][1]}</a></span><br>`);
								break;
							} else if (getSTAEntityPlural(entitiesLinked[e].name, false) == "ObservedProperties") {
								break;
							}
							else {
								if (u == entitiesParentArray.length - 1) { //If there is not any 
									entitiesRequired.push(`<span style=" font-weight: bold;">${entitiesLinked[e].name}*: <span style="color: red; font-style: italic" >You need to link one</span></span> <br>`);
									entitiesRequiedNotLinked.push(entitiesLinked[e].name);
								}
							}
						}
					} else { //not required
						for (var u = 0; u < entitiesParentArray.length; u++) {

							if (getSTAEntityPlural(entitiesLinked[e].name, false) == getSTAEntityPlural(entitiesParentArray[u][0], false) && entitiesParentArray[u][0] != "ObservedProperty") { //If it is a parentNode 
								entitiesNotRequired.push(`<span style=" font-weight: bold;">${entitiesParentArray[u][0]}*:<a href="${entitiesParentArray[u][2]}"> ${entitiesParentArray[u][1]}</a></span><br>`);
								break;
							}
							else {
								if (u == entitiesParentArray.length - 1) { //If there is not any 
									entitiesNotRequired.push(`<span style=" font-weight: bold;">${entitiesLinked[e].name}*: <span style="color: #897F7F; font-style: italic">none</span></span><br>`);
									entitiesRequiedNotLinked.push(entitiesLinked[e].name);
								}
							}
						}
					}
				}

			}
			//else{
			cdns.push('<fieldset id="fieldsetModificateEntities_Entities"><legend>Entities</legend>');
			if (entitiesParentArrayObservedProperties.length != 0) {
				cdns.push('<span style=" font-weight: bold;">observedProperties*:');
				for (var e = 0; e < entitiesParentArrayObservedProperties.length; e++) {
					cdns.push(`<a href="${entitiesParentArrayObservedProperties[e][2]}"> ${entitiesParentArrayObservedProperties[e][1]}</a>, `);
				}
			} else {
				cdns.push(`<span style=" font-weight: bold;">ObservedProperties*: <span style="color: red; font-style: italic" >You need to link one</span>`);
			}
			cdns.push(`</span><br>`);
			cdns.push(...entitiesRequired, ...entitiesNotRequired, "<br></fieldset>");
			cdns.push('<fieldset id="fieldsetModificateEntities_Properties"><legend>Properties</legend>');
			currentNode.STAEntitiesRequiredNotLinked = entitiesRequiedNotLinked;
		}






		cdns.push('</fieldset>')
		document.getElementById("dlgCreateUpdateDeleteEntityProperties").innerHTML = cdns.join("");
		return true;



	</script>
</body>

</html>