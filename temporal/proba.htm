<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="../tapis.css">
	<link href=".../tools.css" rel="stylesheet" type="text/css">
</head>

<body>


	<label>Date:</label> <input type="text" id="createEntityInputDate"
		onChange="addTimeToOtherInputCreateEntities('createEntityInputDate','createEntityInputCalendar' )">
	<br><label>Generate with this: </label><input type="datetime-local" id="createEntityInputCalendar"
		onChange="addTimeToOtherInputCreateEntities('createEntityInputCalendar','createEntityInputDate')">



	<script>

		var actionToDo;
		for (var i = 0; i < parentNodes.length; i++) {
			var parentNode = parentNodes[i];
			if (!parentNode.STAdata || parentNode.STAdata.length == 0) {
				alert("Parent node has no STA data associated");
				return false;
			}
			if (parentNode.image != "sta.png") {
				if (parentNode.STAdata.length > 1) {
					alert("Parent node has more than a single record. Please select a record first.");
					return false;
				}
				var parentEntityName = getSTAEntityPlural(getSTAURLLastEntity(parentNode.STAURL), false);
				if (parentEntityName != entityName && returnIndexEntityRelatedInSTAEntity(entityName, parentEntityName) == -1 && returnIndexEntityRelatedInSTAEntity(entityName, STAEntities[parentEntityName].singular) == -1) {
					alert("Parent node (" + STAEntities[parentEntityName].singular + ") is not a/an " + STAEntities[entityName].singular + " or is directly related to a/an " + STAEntities[entityName].singular);
					return false;
				}
				if (parentEntityName == entityName) { //Update or delete
					actionToDo = "update_delete";
					if (i > 1) {
						alert("One parent node is the same as the entity " + STAEntities[entityName].singular + ". This is for update or delete the entity. In this case, only one parent node is allowed.");
						return false;
					}
					var record = parentNode.STAdata[0]; //Info from parentNode used to complete in update
					if (!record["@iot.id"]) {
						alert("Cannot find @iot.id. Did you removed in a select?");
						return false;
					}
					//Update or delete
					cdns.push('<label style=" font-weight: bold;">Id: </label><input id="dlgCreateUpdateDeleteEntity_id" style="background-color:#D8DFD6" type="text" value="', record["@iot.id"], '" readonly=="readonly"><br>'); //update/delete
				}
				else {
					actionToDo = "create" //CREATE
					var record = parentNode.STAdata[0]; //Info from parentNode used to complete in update
					if (!record["@iot.id"]) {
						alert("Cannot find @iot.id in parent node " + STAEntities[parentEntityName].singular + ". Did you removed in a select?");
						return false;
					}
					//ENTITIES PARENTNODE
					//cdns.push(STAEntities[parentEntityName].singular, ' id: <a href="', getUrlToId(getSTAURLRoot(parentNodes[0].STAURL), parentEntityName, record["@iot.id"]), '" target="_blank">', record["@iot.id"], '</a><br>');

					var url = getUrlToId(getSTAURLRoot(parentNodes[0].STAURL), parentEntityName, record["@iot.id"])
					entitiesParentArray.push([STAEntities[parentEntityName].singular, record["@iot.id"], url]); //EntityName,id.url

				}

			}
		}			

			

		if (actionToDo == "create") cdns.push(...createEntitiesinCreateEntity(currentNode, entitiesParentArray)); //only with create
		else {
			cdns.push(...createEntitiesinCreateEntity(currentNode)); //only with create
		}



	</script>
</body>

</html>